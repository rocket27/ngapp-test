
declare namespace CashIn {

    /**
     * Информация о текущем статусе транзакции внесения наличных
     */
    export type StatusChangedIn = {
        status: TranStatus;
    }
    /**
     * Информация о текущем статусе транзакции внесения наличных
     */
    export type TranStatus = {
        /**
         * Числовой код статуса
         */
        status:             number;
        /**
         * Количество отбракованных купюр в течение текущей транзакции
         */
        refused:            number;
        /**
         * Цифровой ISO код валюты. Купюры принимаются и распознаются только в этой валюте
         */
        currency:           string;
        /**
         * Неиспользованный остаток ранее внесенных средств от предыдущих транзакций внесения. <br>
         * В минимальных единицах валюты
         */
        remainderAmount:    number;
        /**
         * Сумма, внесенная в пределах текущей транзакции <br>
         * В минимальных единицах валюты
         */
        insertedAmount:     number;
        /**
         * Общая сумма доступных для использования средств <br>
         * В минимальных единицах валюты
         */
        amount:             number;
        /**
         * Список купюр, внесенных в пределах текущей транзакции
         */
        insertedNotes:      INoteNumber[];
    }
    export type InsertDoneIn = {
        insertedNotes: INoteNumber[];
    }
    export type InsertNoteDoneIn = {
        insertedNote: INote;
    }
    /**
     * Событие аппаратного уровня
     */    
    export interface EventIn {
        /**
         * Код события <br>
         * Основные коды событий, полезные для HTML уровня: <br>
         * 1307 - купюра/купюры забраны клиентом <br>
         * 1309 - купюра/купюры забракованы <br>
         * 1311 - купюры/купюры вставлены <br>
         * 1310 - купюры/купюры выданы наружу и доступны клиенту (но не забраны) <br>
         * 1308 - изменились счетчики внесенных купюр без завершения режима ожидания (событие генерируется при вставлении монеты в монетоприменик) <br>
         */
        code: number;
    }
    /**
     * Описание сбоя при внесении наличных
     */    
    export interface ErrorIn {
        /**
         * Тип сбойной ситуации <br>
         * **error** - сбой аппаратуры (замятие купюр, потеря связи с устройством и т.д.) <br>
         * **timeout** - истек таймаут ожидания определенного действия от клиента
         */
        type:       string; // error|timeout
        /**
         * Операция, во время выполнения которой возникла сбойная ситуация <br>
         * **insert** - ожидание вставления или распознавание вставленных купюр <br>
         * **return** - возврат ранее внесенных или отбракованных купюр <br>
         * **save**   - сохранение внесенных купюр в сейф <br>
         * **sw**     - программная ошибка (например, логическая ошибка в последовательности команд, подаваемых на устройство)
         */
        oper:       string; // insert|return|save|sw
        /**
         * Аппаратный код ошибки
         */
        devCode?:   number;
    }
    /**
    * Аппаратные возможности кэшина
    */
    export type DevCaps = {
        /**
         * Тип кэшина.<br/>
         * true - пачечник<br/>
         * false - покупюрник
        */
        batch: boolean;
        /**
        * Наличие датчика забранных купюр
        */
        itemsTakenSensor: boolean;
        /**
        * Признак необходимости ручного управления шаттером<br/>
        */
        shutterControl: boolean;
        /**
         * Максимальное количество купюр, принимаемых за одну операцию<br/>
         */        
        maxNotes: number;
    }
    /**
    * Причина выхода из режима ожидания купюр
    */
    export type CancelParamIn = {
        /**
         * true - выход по таймауту, false - выход(отмена) по инициативе клиента
        */
        isTimeout?: boolean;
    }
    
    /**
     * Конфигурация модуля управления устройством приема наличных
     */
    export type Configuration = {
        /**
         * Таймаут на внесение купюр, в секундах
         */
        insertTimeout: number;
        /**
         * Таймаут на возврат купюр, в секундах
         */
        presentTimeout: number;
        /**
         * Аппаратные характеристики устройства
         */
        caps: DevCaps;
    }

}

/**
 * Тип купюры
 */
declare interface INote {
    /**
     * Валюта (цифровой трехсимвольный ISO код)
     */
    curCode:    string;
    /**
     * Номинал в минимальных единицах валюты
     */
    value:      number;
}
/**
 * Пачка купюр одного типа
 */
declare interface INoteNumber extends INote {
    /**
     * Количество купюр в пачке
     */
    count: number;
}

