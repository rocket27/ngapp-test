/** Описание элементов пользовательского интерфейса меню банкомата */
declare namespace Menu {
  /** Параметры вызова сервиса */
interface ISvcUrl {
    /** Операция, в формате URL, принятом для написания меню */
    URL: string;
    //RemindMode:ERemindMode;
    /**
     * Допустимые режимы выполнения операции. Актуально только для меню в режиме ожидания.
     * Список значений: all/card/no_card/contactless/cash/phone.
     */
    CardMode: string;
  }

  /** Графический элемент (изображение, ролик) */
  interface IMedia {
    /** Имя файла, загружаемого из GSR */
    Name: string;
    /** Идентификатор элемента на форме */
    Id: string;
  }


  /** Параметры элемента меню */
  interface IMenuItem {
    /** Идентификатор меню */
    Id: string;
    /** Идентификатор формы отображения меню */
    FormId?: string;   // OperList for grid view
    /** Заголовок меню, если отсутсвует то берется по умолчанию */
    Caption?: string;
    /** Безразмерный список операций */
    List?: IList;
    /** Графические элементы меню (изображение, ролик) */
    Medias?: IMedia[];
    /** Дополнительные текстовые блоки на меню. Например подсказки под кнопками */
    Labels?: ILabel[];
    /** Кнопки меню */
    Buttons?: IButton[];
  }

  /** Параметры метки (Дополнительные текстовые блоки на меню. Например, подсказки под кнопками)*/
  interface ILabel {
    /** Текст для отображения. */
    Text: string;
    /** Идентификатор текста на форме. */
    Id: string;
  }

  /** Параметры кнопки меню */
  interface IButton {
    /** Идентификатор кнопки */
    Id: string;
    /** Вложенный элемент меню */
    MenuItem?: IMenuItem;
    /** Текст на кнопке, если элемент отсутсвует то беретется встроенное название сервиса */
    Text: string;
    /** Подсказка или описание кнопки (мелким шрифтом под текстом кнопки) */
    Hint?: string;
    /** Имя файла логотипа на кнопке */
    Logo?: string;
    /** Имя файла изображения на кнопке */
    Image?: string;
    /** Параметры вызова сервиса */
    SvcUrl?: ISvcUrl;
    /** Идентификатор позиции кнопки на экране (Например, F1-F8, T1-16, Continue, Help) */
    Position: string;
    /** Стиль (цвет функциональной кнопки, marked1, marked2) */
    Style: string;
  }

  /** Меню */
  interface IMenu extends IMenuItem {
      /** Тип запрашиваемого меню
       *  "cash" - Cash Menu
       *  "main" - Card menu
       *  "waitScreen" - Wait screen menu
       */
      Req:string;
  }
  /** Параметры списка операций */
  interface IList {
    /** Идентификатор списка */
    Id: string;
    /** Список кнопок, вызывающих операции */
    Items: IButton[];
  }

}

/** Рекламные заставки (из GSR) */
declare interface IScreenPlayMedia {
  /** Имя файла медиа */
  mediaName: string;
  /** Длительность показа в секундах */
  duration: number;
  /** Дата и время начала */
  start?: string;
  /** Дата и время окончания */
  end?: string;
}



/**
 * Параметры запроса меню из ядра.<br>
 * Меню можно запросить по различным типам данных.<br>
 * Типы перечислены в порядке приоритетов:
 * * По типу  (example: "waitScreen")
 * * По идентификационым данным карты (card binding)
 * * По id
 *
 * Режим ожидания: {type:"waitScreen"}<br>
 * Режим карты: {type:"main"}<br>
 * Режим без карты: {type:"cash"}
 */
declare interface MenuRequestIn {
  /**
   *    Идентификатор меню согласно GSR протокола
   */
  id?: string;
  /**
  *    Тип меню
  *@pattern ^waitScreen$
  */
  type?: string;
  /**
   *    Идентификационные данные карты
   */
}


